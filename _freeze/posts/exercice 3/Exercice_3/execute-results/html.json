{
  "hash": "19e81ca9a781f86743f1c4be5149ead4",
  "result": {
    "markdown": "---\ntitle: \"Les athlètes olympiques\"\nauthor: \"Emma Labre Blanc\"\ndate: \"2024-02-28\"\ncategories: [news]\nimage: \"athletes.jpg\"\n---\n\n\nCet article vous offre l'opportunité d'approfondir vos connaissances sur les caractéristiques des athlètes olympiques, ainsi que sur les intervalles de temps qui séparent les JO de Rio, Tokyo et Paris.\n\n## Description des données utilisées\n\nAvant tout, et pour des raisons de transparence nous commençons par vous présenter les données utilisées et la façon dont nous les avons modifié. Cela afin de vous garantir des informations fiables et de qualité.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Importation des librairies\nlibrary(jsonlite)\nlibrary(arrow)\nlibrary(RSQLite)\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(lubridate)\n```\n:::\n\n\nListe des fichiers et extensions :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfiles <- list.files(\"data/\")\nfiles\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncharacter(0)\n```\n:::\n\n```{.r .cell-code}\ntools::file_ext(files)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlogical(0)\n```\n:::\n:::\n\n\nIl y a 6 fichiers présents dans le dossier data :\n\n\\_\\_MACOSX et raw, data qui a pour extension sqlite olympics_athletes qui a pour extension json exo_1 qui a pour extension csv tokyo_athletes qui a pour extension parquet\n\nLecture du fichier parquet :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntokyo_athl <- read_parquet(\"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/tokyo_athletes.parquet\")\ndim(tokyo_athl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 11085     3\n```\n:::\n\n```{.r .cell-code}\ncolnames(tokyo_athl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Name\"       \"NOC\"        \"Discipline\"\n```\n:::\n:::\n\n\nTokyo_athl contient 11085 lignes et 3 colonnes (Name, NOC et Discipline)\n\nLecture du fichier json :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nolymp_athl <- fromJSON(\"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/olympics_athletes.json\")\ndim(olymp_athl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 269731     13\n```\n:::\n\n```{.r .cell-code}\ncolnames(olymp_athl)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n```\n:::\n:::\n\n\nolymp_athl contient 269731 lignes et 13 colonnes : ID, Name, Sex, Age, Height, Weight, Team, NOC, Games, City, Sport, Event et Medal\n\nConnexion à sqlite :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncon <- dbConnect(RSQLite::SQLite(), dbname = \"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/data.sqlite\")\ndbListTables(con)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"olympics_athletes\" \"tokyo_athletes\"    \"tokyo_medals\"     \n[4] \"tokyo_teams\"      \n```\n:::\n:::\n\n\nLes tables présentes dans con sont olympics_athletes, tokyo_athletes, tokyo_medals et tokyo_teams\n\nCréation de 2 tables avec dbWriteTable :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbWriteTable(con, name = \"olympics_athletes\", value = olymp_athl, overwrite = TRUE)\ndbWriteTable(con, \"tokyo_athletes\", tokyo_athl, overwrite = TRUE)\n```\n:::\n\n\nInspection de olympics_athletes :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbListFields(con, \"olympics_athletes\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n```\n:::\n:::\n\n\nLes colonnes présentes dans la table sont ID Name Sex Age Height Weight Team NOC Games City Sport Event et Medal\n\nImportation de la table olympics_athletes :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable_olympics <- dbReadTable(con, \"olympics_athletes\")\ntable_olympics <- as_tibble(table_olympics)\ntable_olympics\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 269,731 × 13\n      ID Name      Sex     Age Height Weight Team  NOC   Games City  Sport Event\n   <int> <chr>     <chr> <int>  <int>  <dbl> <chr> <chr> <chr> <chr> <chr> <chr>\n 1     1 A Dijiang M        24    180     80 China CHN   1992… Barc… Bask… Bask…\n 2     2 A Lamusi  M        23    170     60 China CHN   2012… Lond… Judo  Judo…\n 3     3 Gunnar N… M        24     NA     NA Denm… DEN   1920… Antw… Foot… Foot…\n 4     4 Edgar Li… M        34     NA     NA Denm… DEN   1900… Paris Tug-… Tug-…\n 5     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 6     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 7     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 8     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 9     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n10     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n# ℹ 269,721 more rows\n# ℹ 1 more variable: Medal <chr>\n```\n:::\n:::\n\n\nConversion de la colonne Sex avec mutate :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(table_olympics)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [269,731 × 13] (S3: tbl_df/tbl/data.frame)\n $ ID    : int [1:269731] 1 2 3 4 5 5 5 5 5 5 ...\n $ Name  : chr [1:269731] \"A Dijiang\" \"A Lamusi\" \"Gunnar Nielsen Aaby\" \"Edgar Lindenau Aabye\" ...\n $ Sex   : chr [1:269731] \"M\" \"M\" \"M\" \"M\" ...\n $ Age   : int [1:269731] 24 23 24 34 21 21 25 25 27 27 ...\n $ Height: int [1:269731] 180 170 NA NA 185 185 185 185 185 185 ...\n $ Weight: num [1:269731] 80 60 NA NA 82 82 82 82 82 82 ...\n $ Team  : chr [1:269731] \"China\" \"China\" \"Denmark\" \"Denmark/Sweden\" ...\n $ NOC   : chr [1:269731] \"CHN\" \"CHN\" \"DEN\" \"DEN\" ...\n $ Games : chr [1:269731] \"1992 Summer\" \"2012 Summer\" \"1920 Summer\" \"1900 Summer\" ...\n $ City  : chr [1:269731] \"Barcelona\" \"London\" \"Antwerpen\" \"Paris\" ...\n $ Sport : chr [1:269731] \"Basketball\" \"Judo\" \"Football\" \"Tug-Of-War\" ...\n $ Event : chr [1:269731] \"Basketball Men's Basketball\" \"Judo Men's Extra-Lightweight\" \"Football Men's Football\" \"Tug-Of-War Men's Tug-Of-War\" ...\n $ Medal : chr [1:269731] NA NA NA \"Gold\" ...\n```\n:::\n\n```{.r .cell-code}\ntable(table_olympics$Sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n     F      M \n 74378 195353 \n```\n:::\n\n```{.r .cell-code}\ntable_olympics <- table_olympics |>\n  mutate(Sex = factor(Sex, levels = c(\"F\",\"M\"), labels = c(\"1\",\"0\")))\nstr(table_olympics$Sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Factor w/ 2 levels \"1\",\"0\": 2 2 2 2 1 1 1 1 1 1 ...\n```\n:::\n\n```{.r .cell-code}\nhead(table_olympics$Sex)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 0 0 0 1 1\nLevels: 1 0\n```\n:::\n:::\n\n\nCréation des colonnes Year et isSummer à partir de la colonne Games :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(table_olympics)\n\ntable_olympics <- table_olympics |>\n  separate_wider_delim(\n    cols = Games,\n    names = c(\"Year\", \"isSummer\"),\n    delim = \" \",\n  ) |>\n  mutate(isSummer = ifelse(isSummer == \"Summer\", TRUE, FALSE))\n\ntable_olympics$Year <- as.integer(table_olympics$Year)\nhead(table_olympics[, c(\"Year\", \"isSummer\")])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n   Year isSummer\n  <int> <lgl>   \n1  1992 TRUE    \n2  2012 TRUE    \n3  1920 TRUE    \n4  1900 TRUE    \n5  1988 FALSE   \n6  1988 FALSE   \n```\n:::\n:::\n\n\n## La moyenne d'âge des athlètes de chaque édition des JO\n\nCalcul de la moyenne d'âge pour chaque édition des JO :\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(table_olympics$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  10.00   21.00   24.00   25.45   28.00   97.00    9315 \n```\n:::\n\n```{.r .cell-code}\nmoyenne <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  group_by(Year) |>\n  summarise(moyenne_age_edition = mean(Age, na.rm=TRUE))\n\nmoyenne\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 29 × 2\n    Year moyenne_age_edition\n   <int>               <dbl>\n 1  1896                23.6\n 2  1900                28.9\n 3  1904                26.7\n 4  1906                27.1\n 5  1908                27.0\n 6  1912                27.5\n 7  1920                29.3\n 8  1924                28.1\n 9  1928                28.0\n10  1932                30.2\n# ℹ 19 more rows\n```\n:::\n:::\n\n\nEn moyenne, les athlètes olympiques ont 25 ans.\n\nL'année avec les athlètes les plus jeunes est 1896 avec une moyenne d'âge de 23,6 ans.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoyenne[which.min(moyenne$moyenne_age_edition), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n   Year moyenne_age_edition\n  <int>               <dbl>\n1  1896                23.6\n```\n:::\n:::\n\n\nL'année avec les athlètes les plus vieux est 1932 avec une moyenne d'âge de 30,2 ans.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoyenne[which.max(moyenne$moyenne_age_edition), ]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n   Year moyenne_age_edition\n  <int>               <dbl>\n1  1932                30.2\n```\n:::\n:::\n\n\n## La taille des athlètes féminines\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaille <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  filter(Sex == \"1\") |>\n  group_by(Sport) |>\n  summarise(moyenne_taille_sport = mean(Height, na.rm=TRUE))\n\ntaille[which.max(taille$moyenne_taille_sport), ] \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 2\n  Sport      moyenne_taille_sport\n  <chr>                     <dbl>\n1 Basketball                 182.\n```\n:::\n:::\n\n\nla discipline des JO d'été pour laquelle la taille des athlètes féminines est la plus grande est le basketball avec une taille moyenne de 1m82.\n\nQuelle a été cette discipline au cours de chacune des éditions ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaille2 <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  filter(Sex == \"1\") |>\n  group_by(Year, Sport) |>\n  summarise(moyenne_taille_sport = mean(Height, na.rm=TRUE))\n\ntaille_annee <- taille2 |>\n  filter(!is.na(moyenne_taille_sport)) |>\n  group_by(Year) |>\n  slice_max(order_by = moyenne_taille_sport, n = 1, with_ties = FALSE) |>\n  ungroup()\n\nView(taille_annee)\n```\n:::\n\n\nMais au fil du temps, bien que le basketball ait souvent eu les plus grandes athlètes olympiques, il n'est pas le seul. On retrouve également des athlètes de grande taille dans d'autres disciplines telles que l'athlétisme, l'escrime, l'équitation, la natation et le volleyball.\n\nNombre de fois où chaque discipline a été la discipline avec les plus grandes athlètes :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaille_annee |>\n  count(Sport, sort = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  Sport             n\n  <chr>         <int>\n1 Basketball       10\n2 Fencing           4\n3 Volleyball        4\n4 Athletics         2\n5 Swimming          2\n6 Equestrianism     1\n```\n:::\n:::\n\n\n10 fois pour le basketball, 4 fois pour le fencing et volleyball, 2 fois pour l'Athletisme et la natation et une fois pour equestrianism\n\n## Combien de temps sépare les éditions des JO de Rio, Tokyo et Paris ?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntexte <- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois\nde Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016,\nceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du\n26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde\nentier à Paris.\"\n\ndates <- str_extract_all(texte, \"\\\\d{1,2} (Juillet|Août) \\\\d{4}\")\ndates\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] \"5 Août 2016\"     \"20 Août 2016\"    \"23 Juillet 2021\" \"8 Août 2021\"    \n[5] \"26 Juillet 2024\" \"11 Août 2024\"   \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remplacement des noms des mois par leur numéro :\ndates_format <- str_replace_all(dates[[1]], c(\"Juillet\"=\"07\", \"Août\"=\"08\"))\ndates_format\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"5 08 2016\"  \"20 08 2016\" \"23 07 2021\" \"8 08 2021\"  \"26 07 2024\"\n[6] \"11 08 2024\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Conversion des éléments en date\ndates_transfo <- dmy(dates_format)\ndates_transfo\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2016-08-05\" \"2016-08-20\" \"2021-07-23\" \"2021-08-08\" \"2024-07-26\"\n[6] \"2024-08-11\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcul du temps séparant les éditions en jours et semaines\nrio_tokyo_jours <- as.numeric(difftime(dmy(\"23 Juillet 2021\"), dmy(\"20 Août 2016\"), units = \"days\"))\nprint(paste(\"Nombre de jours séparant les éditions de Rio et Tokyo :\", rio_tokyo_jours, \" jours.\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Nombre de jours séparant les éditions de Rio et Tokyo : 1798  jours.\"\n```\n:::\n\n```{.r .cell-code}\ntokyo_paris_jours <- as.numeric(difftime(dmy(\"26 Juillet 2024\"), dmy(\"8 Août 2021\"), units = \"days\"))\nprint(paste(\"Nombre de jours séparant les éditions de Tokyo et Paris :\", tokyo_paris_jours, \" jours.\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Nombre de jours séparant les éditions de Tokyo et Paris : 1083  jours.\"\n```\n:::\n\n```{.r .cell-code}\nrio_tokyo_semaines <- round(rio_tokyo_jours / 7,0)\nprint(paste(\"Nombre de semaines séparant les éditions de Rio et Tokyo :\", rio_tokyo_semaines, \" semaines.\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Nombre de semaines séparant les éditions de Rio et Tokyo : 257  semaines.\"\n```\n:::\n\n```{.r .cell-code}\ntokyo_paris_semaines <- round(tokyo_paris_jours / 7,0)\nprint(paste(\"Nombre de semaines séparant les éditions de Tokyo et Paris :\", rio_tokyo_semaines, \" semaines.\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Nombre de semaines séparant les éditions de Tokyo et Paris : 257  semaines.\"\n```\n:::\n:::\n\n\n![Image libre de droit](athletes.jpg)",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}