[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Ce blog vous propose d’en apprendre davantage sur les JO afin d’être paré pour les JO de Paris 2024."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Le blog des JO",
    "section": "",
    "text": "news\n\n\nmétéo\n\n\n\n\n\n\n\n\n\n\n\nMar 4, 2024\n\n\nEmma Labre Blanc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nMar 1, 2024\n\n\nEmma Labre Blanc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 28, 2024\n\n\nEmma Labre Blanc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 27, 2024\n\n\nEmma Labre Blanc\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nFeb 26, 2024\n\n\nEmma Labre Blanc\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/exercice 1/index.html",
    "href": "posts/exercice 1/index.html",
    "title": "Les JO de Paris 2024",
    "section": "",
    "text": "Dans cet article, nous vous proposons d’en apprendre davantage sur les sites et disciplines olympiques des JO de Paris 2024."
  },
  {
    "objectID": "posts/exercice 1/index.html#description-des-données-utilisées",
    "href": "posts/exercice 1/index.html#description-des-données-utilisées",
    "title": "Les JO de Paris 2024",
    "section": "Description des données utilisées",
    "text": "Description des données utilisées\nLes données utilisées sont issues du site web : https://data.gouv.fr\n\n# Lecture du fichier\npath <- \"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/exo_1.csv\"\ndata_ex <- read.table(path, sep = \";\", header = TRUE, quote = \"\\\"\")\n\n\n# 2) Description du jeu de données\nhead(data_ex)\n\n            geo_point                                 nom\n1 48.841319, 2.253076                    Parc des Princes\n2 48.924388, 2.359871                     Stade de France\n3  48.92467, 2.332428                   Village olympique\n4  48.815115, 2.08208               Château de Versailles\n5 48.944207, 2.424716                  Village des médias\n6 48.944643, 2.408258 Terrain des Essences - La Courneuve\n    sites_olympiques_paralympiques\n1                   Site olympique\n2 Site olympique,Site paralympique\n3                                 \n4 Site olympique,Site paralympique\n5                                 \n6                Site paralympique\n                                               sports\n1                                            Football\n2                    Athlétisme,Para athlétisme,Rugby\n3                                                    \n4 Sports équestres,Para équitation,Pentathlon moderne\n5                                                    \n6                                     Para athlétisme\n\ncolnames(data_ex)\n\n[1] \"geo_point\"                      \"nom\"                           \n[3] \"sites_olympiques_paralympiques\" \"sports\"                        \n\nstr(data_ex)\n\n'data.frame':   31 obs. of  4 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n\ndim(data_ex)\n\n[1] 31  4\n\n\nNous pouvons constater que le jeu de données importé contient 4 colonnes qui comportent toutes des données de types chr (caractères).\nCes 4 colonnes sont les suivantes :\n- geo_point : qui donne les coordonnées gps des sites olympiques\n- nom : indique le nom du site olympique\n- sites_olympiques_paralympiques : indique s’io s’agit d’un site olympique, paralympique ou les 2\n- sports : répertorie les disciplines accueillies sur les différents sites\nDe plus, on peut noter que le jeu de données possède 31 lignes.\n\nNombre de sites olympiques et paralympiques\nPlusieurs sites ont été prévus pour accueillir les différentes disciplines qui auront lieu pendant les JO de Paris 2024. Il y aura 26 sites olympiques et 19 sites paralympiques et certains sites accueilleront à la fois des disciplines olympiques et des disciplines paralympiques.\n\n# 3) Nombres de sites olympiques\nsum(grepl(\"Site olympique\", data_ex$sites_olympiques_paralympiques))\n\n[1] 26\n\n\n\n# 4) Nombre de sites paralympiques\nsum(grepl(\"Site paralympique\", data_ex$sites_olympiques_paralympiques))\n\n[1] 19\n\n\n\n\nLes disciplines accueillies\nConcernant les disciplines accueillies sur les différents sites :\n\n# 5) Sites qui accueillent plusieurs disciplines\ndata_ex$nb_sports <- sapply(strsplit(data_ex$sports, \",\"), length)\nsites_plusieurs_disciplines <- data_ex[data_ex$nb_sports > 1, ]\nsites_plusieurs_disciplines$nom\n\n [1] \"Stade de France\"                                \n [2] \"Château de Versailles\"                          \n [3] \"Grand Palais\"                                   \n [4] \"Invalides\"                                      \n [5] \"Pont d'Iéna\"                                    \n [6] \"Arena Bercy\"                                    \n [7] \"Arena Paris nord\"                               \n [8] \"Arena Paris Sud 6 (Porte de Versailles)\"        \n [9] \"Stade de la Concorde\"                           \n[10] \"Arena Champs de Mars\"                           \n[11] \"Stade Tour Eiffel\"                              \n[12] \"Arena La Chapelle\"                              \n[13] \"Centre aquatique\"                               \n[14] \"Arena Paris Sud 1 (Porte de Versailles)\"        \n[15] \"Arena Paris Sud 4 (Porte de Versailles)\"        \n[16] \"La Défense Arena\"                               \n[17] \"Stade nautique\"                                 \n[18] \"Vélodrome National de Saint-Quentin-en-Yvelines\"\n[19] \"Stade Roland Garros\"                            \n\nnrow(sites_plusieurs_disciplines)\n\n[1] 19\n\n19/31\n\n[1] 0.6129032\n\n\nTout d’abord, nous pouvons constater que plusieurs sites accueillent plusieurs disciplines. Ils sont au nombre de 19, ce qui signifie que plus de 60% des sites accueillent plusieurs disciplines. Parmi eux, on peut par exemple citer le stade de France, le Grand Palais et l’Arena champ de mars.\nEnsuite, nous pouvons faire la liste des disciplines paralympiques accueillies par ces sites. (Afin de toutes les répertoriées, nous avons d’abord effectuer une analyse visuelle afin de déterminer les expressions permettant l’identification d’une discipline paralympique. Il s’agit alors des expressions ‘Para’, ‘Céci’, ‘fauteuil’ et ’assis.) La liste est alors la suivante.\n\n# 6) Disciplines paralympiques accueillies\nsites_plusieurs_disciplines$para_disciplines <- sapply(strsplit(sites_plusieurs_disciplines$sports, \",\"), function(sports) {\n  para_sports <- grep(\"^Para\", sports, value = TRUE)\n  ceci_sports <- grep(\"Céci\", sports, value = TRUE, ignore.case = TRUE)\n  assis_sports <- grep(\"assis\", sports, value = TRUE, ignore.case = TRUE)\n  fauteuil_sports <- grep(\"fauteuil\", sports, value = TRUE, ignore.case = TRUE)\n  \n  all_sports <- c(para_sports, ceci_sports, assis_sports, fauteuil_sports)\n  \n  if (length(all_sports) > 0) paste(all_sports, collapse = \",\")\n  else NA\n})\n\nunique(na.omit(sites_plusieurs_disciplines$para_disciplines))\n\n [1] \"Para athlétisme\"                  \"Para équitation\"                 \n [3] \"Para taekwondo,Escrime fauteuil\"  \"Para tir à l'arc\"                \n [5] \"Basket fauteuil\"                  \"Volley-ball assis\"               \n [7] \"Para judo,Rugby fauteuil\"         \"Cécifoot\"                        \n [9] \"Para Badminton,Para powerlifting\" \"Para tennis de table\"            \n[11] \"Para natation\"                    \"Para canoë,Para aviron\"          \n[13] \"Para cyclisme sur piste\"          \"Tennis fauteuil\"                 \n\n\nConcernant maintenant les sites accueillant le plus de disciplines différentes, ils sont au nombre de 10 et accueillent chacun 4 ou 3 disciplines. La liste est à retrouver ci dessous et parmi elle on retrouve des sites tels que les Invalides, le Grand Palais ou encore Arena Bercy.\n\n# 7) Sites accueillants le plus de disciplines différentes\nsites_plusieurs_disciplines <- sites_plusieurs_disciplines[order(-sites_plusieurs_disciplines$nb_sports), ]\nhead(sites_plusieurs_disciplines[, c(2,5)], 10)\n\n                     nom nb_sports\n8           Grand Palais         4\n9              Invalides         4\n12           Arena Bercy         4\n13      Arena Paris nord         4\n15  Stade de la Concorde         4\n17  Arena Champs de Mars         4\n20     Arena La Chapelle         4\n27        Stade nautique         4\n2        Stade de France         3\n4  Château de Versailles         3\n\n\nIl y a par ailleurs une discipline qui apparaît plus de fois que les autres, il s’agit de l’Athlétisme qui est accueillie par 4 sites différents :\n- Stade de France\n- Invalides\n- Pont d’Iéna\n- Hôtel de ville de Paris\n\n# 8)  Discipline ayant lieu sur le plus grand nombre de sites (et lesquels)\nall_sports <- unlist(strsplit(data_ex$sports, \",\"))\ntable(all_sports)\n\nall_sports\n             Athlétisme                  Aviron               Badminton \n                      4                       1                       1 \n        Basket fauteuil              Basketball          Basketball 3x3 \n                      1                       1                       1 \n          BMX freestyle                BMX race                  Boccia \n                      1                       1                       1 \n                   Boxe                Breaking                   Canoë \n                      2                       1                       1 \n               Cécifoot      Cyclisme sur piste      Cyclisme sur route \n                      1                       1                       2 \n      Escalade sportive                 Escrime        Escrime fauteuil \n                      1                       2                       1 \n               Football                Goalball                    Golf \n                      1                       2                       1 \n Gymnastique artistique   Gymnastique rythmique           Haltérophilie \n                      1                       1                       1 \n               Handball                  Hockey                    Judo \n                      1                       1                       1 \n                  Lutte                Natation     Natation artistique \n                      1                       1                       1 \n        Para athlétisme             Para aviron          Para Badminton \n                      2                       1                       1 \n             Para canoë Para cyclisme sur piste Para cyclisme sur route \n                      1                       1                       1 \n        Para équitation               Para judo           Para natation \n                      1                       1                       1 \n      Para powerlifting          Para taekwondo    Para tennis de table \n                      1                       1                       1 \n       Para tir à l'arc      Pentathlon moderne                Plongeon \n                      1                       2                       1 \n                  Rugby          Rugby fauteuil              Skateboard \n                      1                       1                       1 \n       Sports équestres               Taekwondo                  Tennis \n                      1                       1                       1 \n        Tennis de table         Tennis fauteuil             Tir à l'arc \n                      1                       1                       1 \n             trampoline       Volley-ball assis              Volleyball \n                      1                       1                       1 \n    Volleyball de plage                     VTT              Water-polo \n                      1                       1                       2 \n\nnames(which.max(table(all_sports)))\n\n[1] \"Athlétisme\"\n\ndata_ex[grepl(\"Athlétisme\", data_ex$sports), \"nom\"]\n\n[1] \"Stade de France\"         \"Invalides\"              \n[3] \"Pont d'Iéna\"             \"Hôtel de ville de Paris\"\n\n\n\n\nSituation géographique des sites olympiques\nEnfin, si on s’intéresse aux positions géographiques des différents sites, nous pouvons faire plusieurs constats.\nPremièrement, les deux sites olympiques les plus proches sont le Grand Palais et Arena champs de Mars.\n\n# 9) Les deux sites les plus proches\nlibrary(geosphere)\n\nWarning: le package 'geosphere' a été compilé avec la version R 4.2.3\n\ndata_ex$latitude <- sapply(strsplit(data_ex$geo_point, \",\"), function(x) x[1])\ndata_ex$longitude <- sapply(strsplit(data_ex$geo_point, \",\"), function(x) x[2])\n\nstr(data_ex)\n\n'data.frame':   31 obs. of  7 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n $ nb_sports                     : int  1 3 0 3 0 1 1 4 4 1 ...\n $ latitude                      : chr  \"48.841319\" \"48.924388\" \"48.92467\" \"48.815115\" ...\n $ longitude                     : chr  \" 2.253076\" \" 2.359871\" \" 2.332428\" \" 2.08208\" ...\n\ndata_ex$latitude <- as.numeric(data_ex$latitude)\ndata_ex$longitude <- as.numeric(data_ex$longitude)\nstr(data_ex)\n\n'data.frame':   31 obs. of  7 variables:\n $ geo_point                     : chr  \"48.841319, 2.253076\" \"48.924388, 2.359871\" \"48.92467, 2.332428\" \"48.815115, 2.08208\" ...\n $ nom                           : chr  \"Parc des Princes\" \"Stade de France\" \"Village olympique\" \"Château de Versailles\" ...\n $ sites_olympiques_paralympiques: chr  \"Site olympique\" \"Site olympique,Site paralympique\" \"\" \"Site olympique,Site paralympique\" ...\n $ sports                        : chr  \"Football\" \"Athlétisme,Para athlétisme,Rugby\" \"\" \"Sports équestres,Para équitation,Pentathlon moderne\" ...\n $ nb_sports                     : int  1 3 0 3 0 1 1 4 4 1 ...\n $ latitude                      : num  48.8 48.9 48.9 48.8 48.9 ...\n $ longitude                     : num  2.25 2.36 2.33 2.08 2.42 ...\n\ndistances <- distHaversine(data_ex[, c(\"latitude\", \"longitude\")])\ndistances\n\n [1] 15056.7389  3055.1018 30416.6318 40755.4566  1832.7378 52032.1736\n [7] 39330.0598   427.4280 14557.8613 16954.3051  9891.4218 21516.8494\n[13] 29913.6785  5241.7774 10763.3665 10188.1278   567.5872 30116.3397\n[19] 38489.5146 13651.4314 14692.6679 12903.6370   592.9181  7539.9991\n[25] 14218.9884 45422.0657 63604.3467  6135.2023 24344.2892 34240.2309\n\nindices_sites_proches <- order(distances)[1:2]\nindices_sites_proches\n\n[1]  8 17\n\ndata_ex[indices_sites_proches, c(\"nom\", \"latitude\", \"longitude\")]\n\n                    nom latitude longitude\n8          Grand Palais 48.86604  2.312406\n17 Arena Champs de Mars 48.85454  2.300413\n\n\nDeuxièmement, les deux sites olympiques les plus éloignés sont le stade nautique et le terrain des essences.\n\n# 10) Les deux sites les plus éloignés\nindices_sites_eloignes <- order(distances, decreasing = TRUE)[1:2]\ndata_ex[indices_sites_eloignes, c(\"nom\", \"latitude\", \"longitude\")]\n\n                                   nom latitude longitude\n27                      Stade nautique 48.86223  2.636374\n6  Terrain des Essences - La Courneuve 48.94464  2.408258\n\n\nFinalement, si jamais vous êtiez un heureux millionaire, vous pourriez envisager d’acheter un appartement situé au barycentre de l’ensemble des sites olympiques afin de pouvoir profiter de l’ensemble des épreuves olympiques. Cet appartement se situe alors 23 avenue Pierre 1er de Serbie, Quartier de Chaillot, 16ème arrondissement, Paris, Ile de France, France métropolitaire 75116 France.\n\n# 11) Appartement situé au barycentre de l'ensemble des sites olympiques\nlibrary(tidygeocoder)\n\nWarning: le package 'tidygeocoder' a été compilé avec la version R 4.2.3\n\nlibrary(tibble)\n\nWarning: le package 'tibble' a été compilé avec la version R 4.2.3\n\nlatitude_barycentre <- mean(data_ex$latitude)\nlongitude_barycentre <- mean(data_ex$longitude)\n\nlatitude_barycentre\n\n[1] 48.86684\n\nlongitude_barycentre\n\n[1] 2.29757\n\nbarycentre <- tibble(lat = latitude_barycentre, long = longitude_barycentre)\nadresse <- reverse_geocode(barycentre, lat = \"lat\", lon = \"long\")\n\nPassing 1 coordinate to the Nominatim single coordinate geocoder\n\n\nQuery completed in: 1 seconds\n\nadresse\n\n# A tibble: 1 × 3\n    lat  long address                                                           \n  <dbl> <dbl> <chr>                                                             \n1  48.9  2.30 23, Avenue Pierre 1er de Serbie, Quartier de Chaillot, Paris 16e …\n\n\n\n\n\nimage libre de droit"
  },
  {
    "objectID": "posts/exercice 2/index.html",
    "href": "posts/exercice 2/index.html",
    "title": "Les éditions olympiques",
    "section": "",
    "text": "Dans cet article, nous vons proposons de découvrir le nombre d’éditions auxquelles chaque discipline a été présente et d’obtenir des informations sur l’attribution des médailles olympiques."
  },
  {
    "objectID": "posts/exercice 2/index.html#les-données-utilisées",
    "href": "posts/exercice 2/index.html#les-données-utilisées",
    "title": "Les éditions olympiques",
    "section": "Les données utilisées",
    "text": "Les données utilisées\nLes données utilisées pour cet article sont issues du site web suivant : https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques.\nDe plus, nous avons dû effectuer quelques modifications avant de pouvoir les analyser :\n\n# Importation des librairies\nlibrary(rvest)\nlibrary(purrr)\nlibrary(lubridate)\nlibrary(stringr)\nlibrary(tibble)\nlibrary(dplyr)\n\n\n# Importation du jeu de données\nlist_tables <-\n  session(\"https://fr.wikipedia.org/wiki/Liste_des_m%C3%A9daill%C3%A9s_olympiques\") |>\n  html_elements(\".wikitable\") |>\n  html_table()\n\nlist_tables\n\n[[1]]\n# A tibble: 31 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    Épreuves(e… Or                  \n 2 \"\"           Athlétisme   Depui… 29          48          1028                \n 3 \"\"           Aviron       Depui… 28          14          269                 \n 4 \"\"           Badminton    Depui… 8           5           39                  \n 5 \"\"           Basket-ball  Depui… 20          4           32                  \n 6 \"\"           Boxe         1904,… 26          13          266                 \n 7 \"\"           Canoë-kayak  Depui… 20          16          242                 \n 8 \"\"           Cyclisme(ho… Depui… 29          22          263                 \n 9 \"\"           Équitation   1900,… 26          6           151                 \n10 \"\"           Escrime      Depui… 29          12          223                 \n# ℹ 21 more rows\n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[2]]\n# A tibble: 16 × 11\n   Discipline   Discipline   Années `Nombre de` `Nombre de` `médailles décernés`\n   <chr>        <chr>        <chr>  <chr>       <chr>       <chr>               \n 1 \"Discipline\" Discipline   Années Éditions    épreuves e… Or                  \n 2 \"\"           Biathlon     1924,… 16          11          54                  \n 3 \"\"           Bobsleigh    1924-… 21          3           39                  \n 4 \"\"           Combiné nor… Depui… 22          3           28                  \n 5 \"\"           Curling      1924,… 4           2           7                   \n 6 \"\"           Hockey sur … Été :… 23          2           24                  \n 7 \"\"           Luge         Depui… 14          4           37                  \n 8 \"\"           Patinage ar… Été :… 24          4           77                  \n 9 \"\"           Patinage de… Depui… 22          12          152                 \n10 \"\"           Patinage de… Depui… 7           8           32                  \n11 \"\"           Saut à ski   Depui… 22          4           38                  \n12 \"\"           Skeleton     1924,… 6           2           6                   \n13 \"\"           Ski acrobat… Depui… 7           10          18                  \n14 \"\"           Ski alpin    Depui… 19          10          132                 \n15 \"\"           Ski de fond  Depui… 22          12          134                 \n16 \"\"           Snowboard    Depui… 5           10          14                  \n# ℹ 5 more variables: `médailles décernés` <chr>, `médailles décernés` <chr>,\n#   `médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[3]]\n# A tibble: 14 × 8\n   Discipline   Discipline       Années `Nombre d'éditions` `Médailles décernés`\n   <chr>        <chr>            <chr>  <chr>               <chr>               \n 1 \"Discipline\" Discipline       Années Nombre d'éditions   Or                  \n 2 \"\"           Baseball         1992–… 5                   5                   \n 3 \"\"           Pelote basque    1900   1                   1                   \n 4 \"\"           Cricket          1900   1                   1                   \n 5 \"\"           Croquet          1900   1                   3                   \n 6 \"\"           Jeu de paume     1908   1                   1                   \n 7 \"\"           Crosse           1904–… 2                   2                   \n 8 \"\"           Polo             1900,… 5                   5                   \n 9 \"\"           Jeu de raquettes 1908   1                   2                   \n10 \"\"           Roque            1904   1                   1                   \n11 \"\"           Rugby à XV       1900,… 4                   4                   \n12 \"\"           Softball         1996–… 4                   4                   \n13 \"\"           Tir à la corde   1900–… 5                   5                   \n14 \"\"           Motonautisme     1908   5                   3                   \n# ℹ 3 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>\n\n[[4]]\n# A tibble: 2 × 8\n  Discipline   Discipline        Années `Nombre d'éditions` `Médailles décernés`\n  <chr>        <chr>             <chr>  <chr>               <chr>               \n1 \"Discipline\" Discipline        Années Nombre d'éditions   Or                  \n2 \"\"           Patrouille milit… 1924   1                   1                   \n# ℹ 3 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>\n\n[[5]]\n# A tibble: 30 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   <chr> <chr>     <chr>    <chr>    <chr>                  <chr>               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1896  médaillés tableau  Athènes… 43                     43                  \n 3 1900  médaillés tableau  Paris, … 95                     90                  \n 4 1904  médaillés tableau  Saint-L… 91                     96                  \n 5 1908  médaillés tableau  Londres… 110                    110                 \n 6 1912  médaillés tableau  Stockho… 102                    103                 \n 7 1920  médaillés tableau  Anvers,… 154                    156                 \n 8 1924  médaillés tableau  Paris, … 126                    126                 \n 9 1928  médaillés tableau  Amsterd… 109                    111                 \n10 1932  médaillés tableau  Los Ang… 117                    116                 \n# ℹ 20 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n[[6]]\n# A tibble: 24 × 11\n   Jeux  Médaille  Médaille Hôte     Nombred'épreuves(ave…¹ `Médailles décernés`\n   <chr> <chr>     <chr>    <chr>    <chr>                  <chr>               \n 1 Jeux  Médaille  Médaille Hôte     Nombred'épreuves(avec… Or                  \n 2 1924  médaillés tableau  Chamoni… 16                     16                  \n 3 1928  médaillés tableau  Saint-M… 14                     14                  \n 4 1932  médaillés tableau  Lake Pl… 14                     14                  \n 5 1936  médaillés tableau  Garmisc… 17                     17                  \n 6 1948  médaillés tableau  Saint-M… 22                     22                  \n 7 1952  médaillés tableau  Oslo, N… 22                     22                  \n 8 1956  médaillés tableau  Cortina… 24                     25                  \n 9 1960  médaillés tableau  Squaw V… 27                     28                  \n10 1964  médaillés tableau  Innsbru… 34                     34                  \n# ℹ 14 more rows\n# ℹ abbreviated name: ¹​`Nombred'épreuves(avec médailles)`\n# ℹ 5 more variables: `Médailles décernés` <chr>, `Médailles décernés` <chr>,\n#   `Médailles décernés` <chr>,\n#   `Athlète(s) avec le plus de médailles (Or-Argent-Bronze)` <chr>,\n#   `Athlète(s) avec le plus de médailles d'or` <chr>\n\n\nCette commande nous a permis d’importer les données du site web wikipédia concernant les médailles olympiques. On a donc 6 tables avec des dimensions différentes.\n\n# Création dataframe data_medailles_sport_ete\ndata_medailles_sport_ete = data.frame(list_tables[1])\n\n# Supression 1ère colonne et première ligne\ndata_medailles_sport_ete = data_medailles_sport_ete[,-1]\ndata_medailles_sport_ete = data_medailles_sport_ete[-1,]\n\n# Modification noms des colonnes\ncolnames(data_medailles_sport_ete) <- c(\"Discipline\", \"Annees\", \"Editions\",\n                                        \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\",\n                                        \"Athletes_or\")\n\n# Transformation type de données\ndata_medailles_sport_ete[, 3:8] <- lapply(data_medailles_sport_ete[, 3:8], as.integer)\nstr(data_medailles_sport_ete)\n\n'data.frame':   30 obs. of  10 variables:\n $ Discipline        : chr  \"Athlétisme\" \"Aviron\" \"Badminton\" \"Basket-ball\" ...\n $ Annees            : chr  \"Depuis 1896\" \"Depuis 1900\" \"Depuis 1992\" \"Depuis 1936\" ...\n $ Editions          : int  29 28 8 20 26 20 29 26 29 27 ...\n $ Epreuves_2020     : int  48 14 5 4 13 16 22 6 12 2 ...\n $ Or                : int  1028 269 39 32 266 242 263 151 223 34 ...\n $ Argent            : int  1030 268 39 32 266 241 261 149 223 34 ...\n $ Bronze            : int  1027 273 43 32 472 243 260 148 221 35 ...\n $ Total             : int  3085 810 121 96 1004 726 784 448 667 103 ...\n $ Athletes_medailles: chr  \"Paavo Nurmi (FIN) (9-3-0)\" \"Elisabeta Lipă (ROU) (5-2-1)\" \"Gao Ling (CHN) (2-1-1)\" \"Teresa Edwards (USA) (4-0-1)\" ...\n $ Athletes_or       : chr  \"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\" \"Elisabeta Lipă (ROU) (5-2-1) Georgeta Damian (ROU) (5-0-1) Steven Redgrave (GBR) (5-0-1)\" \"Gao Ling (CHN) (2-1-1) Kim Dong-moon (KOR) (2-0-1) Zhang Nan (CHN) (2-0-1) Ge Fei (CHN) (2-0-0) Gu Jun (CHN) (2\"| __truncated__ \"Teresa Edwards (USA) (4-0-1) Sue Bird (USA) (4-0-0) Tamika Catchings (USA) (4-0-0) Lisa Leslie (USA) (4-0-0) Di\"| __truncated__ ...\n\n\nNous pouvons également noter que le jeu de données créé contient 30 observations et 10 variables et que les colonnes ont effectivement été renommées et pour certaines converties en colonnes d’entiers."
  },
  {
    "objectID": "posts/exercice 2/index.html#les-disciplines-au-cours-du-temps",
    "href": "posts/exercice 2/index.html#les-disciplines-au-cours-du-temps",
    "title": "Les éditions olympiques",
    "section": "Les disciplines au cours du temps",
    "text": "Les disciplines au cours du temps\nAvec ces données, nous pouvons en apprendre davantage sur les disciplines présentent lors des Jeux olympiques au cours du temps.\nTout d’abord, les trois disciplines avec le plus de médailles distribuées depuis le début des JO sont : L’Athlétisme avec 3085 médailles distribuées, la natation avec 1814 et la lutte avec 1358 médailles distribuées.\n\ndata_medailles_sport_ete[order(-data_medailles_sport_ete$Total), c(1,8)][1:3,]\n\n                 Discipline Total\n2                Athlétisme  3085\n19 Natation(hommes, femmes)  1814\n18                    Lutte  1358\n\n\nEnsuite, les trois disciplines ayant eu le moins d’épreuves en 2020 sont le Football, le Golf et le Handball avec 2 épreuves chacune.\n\ndata_medailles_sport_ete[order(data_medailles_sport_ete$Epreuves_2020),c(1,4) ][1:3, ]\n\n   Discipline Epreuves_2020\n11   Football             2\n12       Golf             2\n14   Handball             2\n\n\nCependant, ce ne sont pas les seules avec seulement 2 épreuves en 2020. En effet, ce sont celles-ci qui se sont affichées seulement en raison de l’ordre alphabatique mais il y a également le Hockey sur gazon, la natation synchronisée, le pentathlon moderne, le volley_ball et le water-polo :\n\nsubset(data_medailles_sport_ete, Epreuves_2020 == 2, select = c(Discipline, Epreuves_2020))\n\n              Discipline Epreuves_2020\n11              Football             2\n12                  Golf             2\n14              Handball             2\n16      Hockey sur gazon             2\n20 Natation synchronisée             2\n21    Pentathlon moderne             2\n30           Volley-ball             2\n31            Water polo             2"
  },
  {
    "objectID": "posts/exercice 2/index.html#calculer-du-nombre-déditions",
    "href": "posts/exercice 2/index.html#calculer-du-nombre-déditions",
    "title": "Les éditions olympiques",
    "section": "Calculer du nombre d’éditions",
    "text": "Calculer du nombre d’éditions\nNous proposons maintenant de créer une fonction nous permettant de calculer le nombre d’édition qu’il a eu pour chaque disciplines des JO. Avant de la créer nous allons suivre plusieurs étapes.\n\nCréation de la fonction calcul_nb_editions_int\nNous allons commencer par une fonction simple permettant de faire le calcul en fonction de la date de début renseignée. Cette fonction ne prendra alors qu’un paramètre correspondant à cette date qui est donc de type entier.\nCependant, avant de la créer, nous devons faire attention aux guerres mondiales qui influencent le nombre d’éditions. Ainsi, il est nécessaire de prendre en compte le fait qu’il n’y a pas eu d’édition des JO en 1916, 1940 et 1944. Donc notre fonction va devoir contenir des conditions telles que : - Si la date rentrée est inférieure ou égale à 1916 enlever 3, - Si la date renseignée est est supérieure à 1916 mais inférieure ou égale à 1940 enlever 2, - Si la date renseignée est supérieure à 1940 et inférieure ou égale à 1944 enlever 1.\n\ncalcul_nb_editions_int <- function(depuis) {\n  Edition_nombre <- (((2020 - depuis) / 4) + 1)\n  \n  if (depuis <= 1916) {\n    Edition_nombre <- Edition_nombre - 3\n  } else if (depuis <= 1940) {\n    Edition_nombre <- Edition_nombre - 2\n  } else if (depuis <= 1944) {\n    Edition_nombre <- Edition_nombre - 1\n  }\n  \n  return(Edition_nombre)\n} \n\ncalcul_nb_editions_int(1992)\n\n[1] 8\n\n\nGrâce à cette fonction, il est possible d’observer qu’une discipline qui a fait sa première apparition aux JO en 1992 par exemple a été présente lors de 8 éditions.\n\n\nCréation de la fonction calcul_nb_editions_str\nMaintenant on va essayer de créer une fonction prenant en argument des données de type caractères. Il est alors nécessaire d’identifier les différents patterns afin de les traiter correctement.\nGrâce à cette commande nous pouvons identifier les différents patterns:\n\ndata_medailles_sport_ete$Annees\n\n [1] \"Depuis 1896\"                      \"Depuis 1900\"                     \n [3] \"Depuis 1992\"                      \"Depuis 1936\"                     \n [5] \"1904, 1908,depuis 1920\"           \"Depuis 1936\"                     \n [7] \"Depuis 1896\"                      \"1900,depuis 1912\"                \n [9] \"Depuis 1896\"                      \"1900–1928,depuis 1936\"           \n[11] \"1900–1904,depuis 2016\"            \"Depuis 1896\"                     \n[13] \"1936,depuis 1972\"                 \"1896, 1904,depuis 1920\"          \n[15] \"1908, 1920,depuis 1928\"           \"1964,depuis 1972\"                \n[17] \"1896,depuis 1904\"                 \"Depuis 1896\"                     \n[19] \"Depuis 1984\"                      \"Depuis 1912\"                     \n[21] \"Depuis 1904\"                      \"Depuis 2000\"                     \n[23] \"1896–1924,depuis 1988\"            \"Depuis 1988\"                     \n[25] \"1896, 1900,1908–1924,depuis 1932\" \"1900-1912, 1920,depuis 1972\"     \n[27] \"Depuis 2000\"                      \"1900,depuis 1908\"                \n[29] \"Depuis 1964\"                      \"1900,depuis 1908\"                \n\n\nIl y en a donc 3 : - “1908-1924” par exemple (motif : “-”), dans ce cas il faut faire (1924-1908)/4 - “depuis 1976” par exemple (motif : “depuis” ou “Depuis”), dans ce cas il faut faire (2020-1976)/4 - “1896” par exemple, dans ce cas il faut juste ajouter un au reste du calcul.\nDe plus, il faut également prendre en compte les guerres mondiales donc en 1916, 1940 et 1944 il n’y a pas eu de JO.\n\ncalcul_nb_editions_str <- function(patterns_str) {\n  motifs <- unlist(strsplit(patterns_str, \",\\\\s*\"))\n  nb_editions <- numeric(length(motifs))\n  \n  for (i in seq_along(motifs)) {\n    motif <- motifs[i]\n    \n    if (grepl(\"-\", motif)) {\n      annees <- as.numeric(unlist(strsplit(motif, \"-\")))\n      nb_editions[i] <- ((annees[2] - annees[1]) %/% 4) + 1\n      \n      if (1916 %in% seq(annees[1], annees[2], by = 4) && \n          1940 %in% seq(annees[1], annees[2], by = 4) &&\n          1944 %in% seq(annees[1], annees[2], by = 4)) {\n        nb_editions[i] <- nb_editions[i] - 3\n      } else if ((1916 %in% seq(annees[1], annees[2], by = 4) && 1940 %in% seq(annees[1], annees[2], by = 4)) ||\n                 (1940 %in% seq(annees[1], annees[2], by = 4) && 1944 %in% seq(annees[1], annees[2], by = 4))) {\n        nb_editions[i] <- nb_editions[i] - 2\n      } else if (1916 %in% seq(annees[1], annees[2], by = 4) || \n                 1940 %in% seq(annees[1], annees[2], by = 4) || \n                 1944 %in% seq(annees[1], annees[2], by = 4)) {\n        nb_editions[i] <- nb_editions[i] - 1\n      }\n      \n    } else if (grepl(\"(?i)depuis\", motif)) {\n      annee_debut <- as.numeric(gsub(\"\\\\D\", \"\", motif))\n      nb_editions[i] <- length(seq(annee_debut, 2020, by = 4))\n      \n      if (annee_debut <= 1916) {\n        nb_editions[i] <- nb_editions[i] - 3\n      } else if (annee_debut <= 1940) {\n        nb_editions[i] <- nb_editions[i] - 2\n      } else if (annee_debut <= 1944) {\n        nb_editions[i] <- nb_editions[i] - 1\n      }\n      \n    } else {\n      nb_editions[i] <- 1\n    }\n  }\n  \n  return(sum(nb_editions, na.rm = TRUE))\n}\n\ncalcul_nb_editions_str(\"1896, 1904, depuis 1920\")\n\n[1] 26\n\n\n\ndata_medailles_sport_ete %>%\n  filter(Annees == \"1896, 1904,depuis 1920\") %>%\n  select(Discipline)\n\n     Discipline\n1 Haltérophilie\n\n\nGrâce à cette fonction, nous pouvons alors calculer le nombre d’éditions qu’il y a eu pour la discipline Haltérophilie par exemple. Nous trouvons 26, ce qui correspond à la valeur présente dans le tableau de données :\n\ndata_medailles_sport_ete %>%\n  filter(Discipline == \"Haltérophilie\") %>%\n  select(Editions)\n\n  Editions\n1       26\n\n\n\n\nCréation de la fonction générique calcul_nb_editions\nFinalement nous allons créer une fonction générique permettant de calculer à la fois des données de type integer et des données de type caractère.\n\ncalcul_nb_editions <- function(x) {\n  if (is.numeric(x)) {\n    return(calcul_nb_editions_int(x))\n  } else if (is.character(x)) {\n    return(calcul_nb_editions_str(x))\n  } else {\n    stop(\"Erreur\")\n  }\n}\n\ncalcul_nb_editions(2000)\n\n[1] 6\n\n# renvoie 6\ncalcul_nb_editions(\"1904-1924, depuis 1948\")\n\n[1] 24\n\n# renvoie 24\n\nIci nous pouvons voir que notre fonction permet de renvoyer 6 éditions pour les disciplines étant apparu en 2000 et renvoie 24 pour celle(s) ayant eu lieu entre 1904-1924 puis depuis 1948."
  },
  {
    "objectID": "posts/exercice 2/index.html#calculer-du-nombre-de-médailles",
    "href": "posts/exercice 2/index.html#calculer-du-nombre-de-médailles",
    "title": "Les éditions olympiques",
    "section": "Calculer du nombre de médailles",
    "text": "Calculer du nombre de médailles\nMaintenant que nous avons créé une fonction permettant de calculer le nombre d’éditions nous pouvons en créer une permettant de calculer le nombre de médailles. Pour se faire nous allons d’abord commencer par visualiser la colonne sur Athletes_medailles afin de voir à quoi elle ressemble.\n\nhead(data_medailles_sport_ete$Athletes_medailles)\n\n[1] \"Paavo Nurmi (FIN) (9-3-0)\"                                                                                                                                                                                                                                                                              \n[2] \"Elisabeta Lipă (ROU) (5-2-1)\"                                                                                                                                                                                                                                                                           \n[3] \"Gao Ling (CHN) (2-1-1)\"                                                                                                                                                                                                                                                                                 \n[4] \"Teresa Edwards (USA) (4-0-1)\"                                                                                                                                                                                                                                                                           \n[5] \"László Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0) Roniel Iglesias (CUB) (2-0-1) Boris Lagutin (URS) (2-0-1) Oleg Saitov (RUS) (2-0-1) Zou Shiming (CHN) (2-0-1) Roberto Cammarelle (ITA) (1-1-1) Zbigniew Pietrzykowski (POL) (0-1-2) Arnold Vanderlyde (NED) (0-0-3)\"\n[6] \"Birgit Fischer (GER) (8-4-0)\"                                                                                                                                                                                                                                                                           \n\n\nLe but de la fonction est d’afficher le nombre de médailles reçues par chacun des athlètes sauf que dans une même cellule, plusieurs athlètes peuvent être mentionnés comme nous pouvons le voir ci-dessus. Ainsi, il faut créer une fonction qui permette de distinguer les différents athlètes.\n\ncalcul_medailles_individuelles <- function(data) {\n  athletes <- unlist(str_split(data, \"\\\\)\\\\s\", simplify = TRUE))\n  resultats <- numeric(length(athletes))\n  \n  for (i in seq_along(athletes)) {\n    medailles <- str_extract_all(athletes[i], \"\\\\d+\")\n    \n    if (length(medailles[[1]]) > 0) {\n      chiffres <- as.integer(medailles[[1]])\n      resultats[i] <- sum(chiffres)\n    }\n  }\n  \n  return(resultats[resultats != 0])\n}\n\n# Exemple résultats \nx <- c(\"Paavo Nurmi (FIN) (9-3-0)\",\n  \"Elisabeta Lipă (ROU) (5-2-1)\",\n  \"Gao Ling (CHN) (2-1-1)\",\n  \"Teresa Edwards (USA) (4-0-1)\",\n  \"László Papp (HUN) (3-0-0) Félix Savón (CUB) (3-0-0) Teófilo Stevenson (CUB) (3-0-0) Roniel Iglesias (CUB) (2-0-1) Boris Lagutin (URS) (2-0-1) Oleg Saitov (RUS) (2-0-1) Zou Shiming (CHN) (2-0-1) Roberto Cammarelle (ITA) (1-1-1) Zbigniew Pietrzykowski (POL) (0-1-2) Arnold Vanderlyde (NED) (0-0-3)\"\n)\ncalcul_medailles_individuelles(x)\n\n [1] 12  8  4  5  3  3  3  3  3  3  3  3  3  3\n\n\nComme nous pouvons le voir, Paavo Nurmi a reçu 12 médailles, Elisabeta Lipa en a reçu 8…\nMaintenant que nous avons déterminé une fonction permettant de calculer le nombre de médailles de chaque athlètes nous sommes désormais en mesure d’identifier les 3 athlètes ayant reçu le plus de médailles. Cependant, avant de faire cela, il faut appliquer notre fonction à toute la colonne Athletes_medailles afin de déterminer le nombre de médailles reçues par chacun des athlètes.\n\nresultats_medailles <- sapply(data_medailles_sport_ete$Athletes_medailles, calcul_medailles_individuelles)\nresultats_medailles\n\n$`Paavo Nurmi (FIN) (9-3-0)`\n[1] 12\n\n$`Elisabeta Lipă (ROU) (5-2-1)`\n[1] 8\n\n$`Gao Ling (CHN) (2-1-1)`\n[1] 4\n\n$`Teresa Edwards (USA) (4-0-1)`\n[1] 5\n\n$...\n [1] 3 3 3 3 3 3 3 3 3 3\n\n$`Birgit Fischer (GER) (8-4-0)`\n[1] 12\n\n$`Jason Kenny (GBR) (7-2-0)`\n[1] 9\n\n$`Isabell Werth (GER) (7-5-0)`\n[1] 12\n\n$`Edoardo Mangiarotti (ITA) (6-5-2)`\n[1] 13\n\n$`Christie Rampone (USA) (3-1-0)`\n[1] 4\n\n$`Chandler Egan (USA) (1-1-0) Lydia Ko (NZL) (0-1-1) Francis Newton (USA) (0-1-1)`\n[1] 2 2 2\n\n$`Larissa Latynina (URS) (9-5-4)`\n[1] 18\n\n$`Andreï Lavrov (RUS) (3-0-1) Oh Seong-ok (KOR) (1-2-1)`\n[1] 4 4\n\n$`Pýrros Dímas (GRE) (3-0-1) Ronny Weller (GER) (1-2-1) Nikolaj Pešalov (BUL, CRO) (1-1-2) Norbert Schemansky (USA) (1-1-2) Eko Yuli Irawan (INA) (0-2-2)`\n[1] 4 4 4 4 4\n\n$`Leslie Claudius (IND) (3-1-0) Udham Singh (IND) (3-1-0) Teun de Nooijer (NED) (2-2-0) Luciana Aymar (ARG) (0-2-2)`\n[1] 4 4 4 4\n\n$`Teddy Riner (FRA) (3-0-2) Ryōko Tani (JPN) (2-2-1)`\n[1] 5 5\n\n$`Wilfried Dietrich (RFA) (1-2-2)`\n[1] 5\n\n$`Michael Phelps (USA) (23-3-2)`\n[1] 28\n\n$`Svetlana Romashina (RUS) (7-0-0)`\n[1] 7\n\n$`Pavel Lednev (URS) (2-2-3)`\n[1] 7\n\n$`Dmitri Sautin (RUS) (2-2-4)`\n[1] 8\n\n$`Hwang Kyung-seon (KOR) (2-0-1) Steven López (USA) (2-0-1) Hadi Saei (IRI) (2-0-1) María Espinoza (MEX) (1-1-1)`\n[1] 3 3 3 3\n\n$`Venus Williams (USA) (4-1-0) Kitty McKane (GBR) (1-2-2)`\n[1] 5 5\n\n$`Ma Long (CHN) (5-0-0) Wang Nan (CHN) (4-1-0) Wang Hao (CHN) (2-3-0)`\n[1] 5 5 5\n\n$`Carl Osburn (USA) (5-4-2)`\n[1] 11\n\n$`Hubert Van Innis (BEL) (6-4-0)`\n[1] 10\n\n$`Jonathan Brownlee (GBR) (1-1-1)`\n[1] 3\n\n$`Ben Ainslie (GBR) (4-1-0) Robert Scheidt (BRA) (2-2-1) Torben Grael (BRA) (2-1-2)`\n[1] 5 5 5\n\n$`Ana Fernández (CUB) (3-0-1) Kerri Walsh (USA) (3-0-1) Inna Ryskal (URS) (2-2-0) Sérgio Dutra Santos (BRA) (2-2-0) Sergey Tetyukhin (RUS) (1-1-2)`\n[1] 4 4 4 4 4\n\n$`Dezső Gyarmati (HUN) (3-1-1)`\n[1] 5\n\n\nMaintenant que nous avons fait ça nous pouvons alors déterminer les athlètes ayant reçu le plus de médailles, il s’agit de Michael Phelps avec 28 médailles suivi de Larissa Latynina avec 18 médailles et Edoardo Mangiarotti avec 16 médailles :\n\nlist_df <- list()\n\nfor (i in seq_along(resultats_medailles)) {\n  matches <- str_match_all(data_medailles_sport_ete$Athletes_medailles[i], \"([^\\\\(]+)\\\\s*\\\\([^)]+\\\\)\\\\s*\\\\((\\\\d+)-(\\\\d+)-(\\\\d+)\\\\)\")\n  \n  df <- tibble(\n    Athlete = trimws(matches[[1]][, 1]),\n    Medailles = resultats_medailles[[i]]\n  )\n  \n  list_df[[i]] <- df\n}\n\nfinal_df <- do.call(rbind, list_df)\nfinal_df\n\n# A tibble: 62 × 2\n   Athlete                         Medailles\n   <chr>                               <dbl>\n 1 Paavo Nurmi (FIN) (9-3-0)              12\n 2 Elisabeta Lipă (ROU) (5-2-1)            8\n 3 Gao Ling (CHN) (2-1-1)                  4\n 4 Teresa Edwards (USA) (4-0-1)            5\n 5 László Papp (HUN) (3-0-0)               3\n 6 Félix Savón (CUB) (3-0-0)               3\n 7 Teófilo Stevenson (CUB) (3-0-0)         3\n 8 Roniel Iglesias (CUB) (2-0-1)           3\n 9 Boris Lagutin (URS) (2-0-1)             3\n10 Oleg Saitov (RUS) (2-0-1)               3\n# ℹ 52 more rows\n\nhead(final_df[order(-final_df$Medailles), ],3)\n\n# A tibble: 3 × 2\n  Athlete                           Medailles\n  <chr>                                 <dbl>\n1 Michael Phelps (USA) (23-3-2)            28\n2 Larissa Latynina (URS) (9-5-4)           18\n3 Edoardo Mangiarotti (ITA) (6-5-2)        13"
  },
  {
    "objectID": "posts/exercice 2/index.html#les-nationalités-les-plus-représentées",
    "href": "posts/exercice 2/index.html#les-nationalités-les-plus-représentées",
    "title": "Les éditions olympiques",
    "section": "Les nationalités les plus représentées",
    "text": "Les nationalités les plus représentées\nIl pourrait maintenant être intéressant de connaître les 3 nationalités les plus représentées, pour toutes les épreuves, au classement du nombre de médailles d’or individuelles reccueillies.\nOn créé alors d’abord une fonction permettant d’extraire la nationalité puis on l’applique sur la colonne Athletes_or. Enfin, on agrége les résultats de manière à sommer toutes les lignes et à obtenir les 3 nations les plus représentées, et leur effectif :\n\nextraire_nationalite_athlete <- function(athletes) {\n  nationalites <- regmatches(athletes, gregexpr(\"\\\\(([A-Z]{3})\\\\)\", athletes))[[1]]\n  return(table(nationalites))\n}\n\nextraire_nationalite_athlete(\"Paavo Nurmi (FIN) (9-3-0) Carl Lewis (USA) (9-1-0)\")\n\nnationalites\n(FIN) (USA) \n    1     1 \n\nresultats_nationalites <- lapply(data_medailles_sport_ete$Athletes_or, extraire_nationalite_athlete)\nresultats_nationalites\n\n[[1]]\nnationalites\n(FIN) (USA) \n    1     1 \n\n[[2]]\nnationalites\n(GBR) (ROU) \n    1     2 \n\n[[3]]\nnationalites\n(CHN) (KOR) \n    8     1 \n\n[[4]]\nnationalites\n(USA) \n    5 \n\n[[5]]\nnationalites\n(CUB) (HUN) \n    2     1 \n\n[[6]]\nnationalites\n(GER) \n    1 \n\n[[7]]\nnationalites\n(GBR) \n    1 \n\n[[8]]\nnationalites\n(GER) \n    1 \n\n[[9]]\nnationalites\n(HUN) \n    1 \n\n[[10]]\nnationalites\n(USA) \n    4 \n\n[[11]]\n< table of extent 0 >\n\n[[12]]\nnationalites\n(URS) \n    1 \n\n[[13]]\nnationalites\n(RUS) \n    1 \n\n[[14]]\nnationalites\n(GRE) (TUR) \n    2     2 \n\n[[15]]\nnationalites\n(AUS) (IND) \n    1     7 \n\n[[16]]\nnationalites\n(FRA) (JPN) \n    1     1 \n\n[[17]]\nnationalites\n(CUB) (JPN) \n    1     1 \n\n[[18]]\nnationalites\n(USA) \n    1 \n\n[[19]]\nnationalites\n(RUS) \n    1 \n\n[[20]]\nnationalites\n(HUN) \n    1 \n\n[[21]]\nnationalites\n(CHN) \n    2 \n\n[[22]]\nnationalites\n(CHN) (GBR) (IRI) (KOR) (USA) \n    2     1     1     1     1 \n\n[[23]]\nnationalites\n(USA) \n    2 \n\n[[24]]\nnationalites\n(CHN) \n    1 \n\n[[25]]\nnationalites\n(NOR) (USA) \n    1     4 \n\n[[26]]\nnationalites\n(BEL) \n    1 \n\n[[27]]\nnationalites\n(GBR) \n    1 \n\n[[28]]\nnationalites\n(DEN) (GBR) \n    1     1 \n\n[[29]]\nnationalites\n(CUB) (USA) \n    5     2 \n\n[[30]]\nnationalites\n(HUN) \n    1 \n\nlist_df_nationalites <- list()\n\nfor (i in seq_along(resultats_nationalites)) {\n  df_nationalites <- as.data.frame(resultats_nationalites[[i]])\n  \n  list_df_nationalites[[i]] <- df_nationalites\n}\n\ndf_nationalites <- do.call(rbind, list_df_nationalites)\n\ndf_nationalites |>\n  group_by(nationalites) |>\n  summarise(Total = sum(Freq)) |>\n  arrange(desc(Total)) |>\n  head(3)\n\n# A tibble: 3 × 2\n  nationalites Total\n  <fct>        <int>\n1 (USA)           20\n2 (CHN)           13\n3 (CUB)            8\n\n\nAinsi, au vu des résultats, nous pouvons constater que les 3 nationalités les plus représentées, pour toutes les épreuves, au classement du nombre de médailles d’or individuelles reccueillies sont les USA avec 20 médailles d’or, la Chine avec 13 et Cuba avec 8."
  },
  {
    "objectID": "posts/exercice 2/index.html#concernant-les-jo-dhiver",
    "href": "posts/exercice 2/index.html#concernant-les-jo-dhiver",
    "title": "Les éditions olympiques",
    "section": "Concernant les JO d’hiver",
    "text": "Concernant les JO d’hiver\nFinalement, nous pouvons réappliquer ces fonctions sur le jeu de données sur les JO d’hiver.\nOn commence par effectuer quelques modifications sur la base de données :\n\njo_hiver = data.frame(list_tables[2])\njo_hiver = jo_hiver[,-1]\njo_hiver = jo_hiver[-1,]\ncolnames(jo_hiver) <- c(\"Discipline\", \"Annees\", \"Editions\",\n                                        \"Epreuves_2020\", \"Or\", \"Argent\", \"Bronze\", \"Total\", \"Athletes_medailles\",\n                                        \"Athletes_or\")\n\nEnsuite on applique la fonction calcul_medailles_individuelles :\n\n# calcul_medailles_individuelles\n\nresultats_medailles_hiver <- sapply(jo_hiver$Athletes_medailles, calcul_medailles_individuelles)\nresultats_medailles_hiver\n\n$`Ole Einar Bjørndalen (NOR) (8-4-1)`\n[1] 13\n\n$`Bogdan Musiol (RDA) (1-5-1)`\n[1] 7\n\n$`Felix Gottwald (AUT) (3-1-3)`\n[1] 7\n\n$`Anna Le Moine (SWE) (2-0-0) Cathrine Lindahl (SWE) (2-0-0) Eva Lund (SWE) (2-0-0) Anette Norberg (SWE) (2-0-0)\\n Kaitlyn Lawes (CAN) (2-0-0)\\n John Morris (CAN) (2-0-0)\\n Kevin Martin (CAN) (1-1-0) Torger Nergård (NOR) (1-1-0) Mirjam Ott (SUI) (0-2-0)`\n[1] 2 2 2 2 2 2 2 2 2\n\n$`Jayna Hefford (CAN) (4-1-0) Hayley Wickenheiser (CAN) (4-1-0)`\n[1] 5 5\n\n$`Armin Zöggeler (ITA) (2-1-3)`\n[1] 6\n\n$`Tessa Virtue (CAN) (3-2-0)\\n Scott Moir (CAN) (3-2-0)`\n[1] 5 5\n\n$`Ireen Wüst (NED) (5-5-1)`\n[1] 11\n\n$`/  Viktor Ahn (KOR / RUS) (6-0-2) Apolo Anton Ohno (USA) (2-2-4)\\n Arianna Fontana (ITA) (1-2-5)`\n[1] 8 8 8\n\n$`Matti Nykänen (FIN) (4-1-0)`\n[1] 5\n\n$`Elizabeth Yarnold (GBR) (2-0-0) Martins Dukurs (LAT) (0-2-0) John Heaton (USA) (0-2-0) Gregor Stähli (SUI) (0-0-2)`\n[1] 2 2 2 2\n\n$`Kari Traa (NOR) (1-1-1)`\n[1] 3\n\n$`Kjetil André Aamodt (NOR) (4-2-2)`\n[1] 8\n\n$`Marit Bjørgen (NOR) (8-4-3)`\n[1] 15\n\n$`Kelly Clark (USA) (1-0-2)\\n Shaun White (USA) (3-0-0)\\n Jamie Anderson (USA) (2-1-0)\\n Zan Kosir (SVN) (0-1-2)`\n[1] 3 3 3 3\n\nresultats_medailles_hiver <- map(jo_hiver$Athletes_medailles, calcul_medailles_individuelles)\nresultats_medailles_hiver\n\n[[1]]\n[1] 13\n\n[[2]]\n[1] 7\n\n[[3]]\n[1] 7\n\n[[4]]\n[1] 2 2 2 2 2 2 2 2 2\n\n[[5]]\n[1] 5 5\n\n[[6]]\n[1] 6\n\n[[7]]\n[1] 5 5\n\n[[8]]\n[1] 11\n\n[[9]]\n[1] 8 8 8\n\n[[10]]\n[1] 5\n\n[[11]]\n[1] 2 2 2 2\n\n[[12]]\n[1] 3\n\n[[13]]\n[1] 8\n\n[[14]]\n[1] 15\n\n[[15]]\n[1] 3 3 3 3\n\nlist_df_hiver <- map(jo_hiver$Athletes_medailles, ~{\n  resultats <- calcul_medailles_individuelles(.x)\n  df <- tibble(\n    Athlete = .x,\n    Medailles = resultats\n  )\n  return(df)\n})\n\nfinal_df_hiver <- bind_rows(list_df_hiver)\nfinal_df_hiver |> \n  arrange(desc(Medailles)) |>\n  head(3)\n\n# A tibble: 3 × 2\n  Athlete                            Medailles\n  <chr>                                  <dbl>\n1 Marit Bjørgen (NOR) (8-4-3)               15\n2 Ole Einar Bjørndalen (NOR) (8-4-1)        13\n3 Ireen Wüst (NED) (5-5-1)                  11\n\n\nOn constate alors que les trois athlètes ayant reçu le plus de médailles individuelles pour les JO d’hiver sont Marit Bjorgen avec 15 médailles, Ole Einar Bjorndalen avec 13 médailles et Ireen Wust avec 11 médailles.\nApplication de la fonction extraire_nationalite_athlete :\n\nresultats_nationalites_hiver <- lapply(jo_hiver$Athletes_or, extraire_nationalite_athlete)\nresultats_nationalites_hiver\n\n[[1]]\nnationalites\n(NOR) \n    1 \n\n[[2]]\nnationalites\n(GER) \n    2 \n\n[[3]]\nnationalites\n(AUT) (FIN) (GER) (NOR) (RDA) \n    1     1     1     2     1 \n\n[[4]]\nnationalites\n(CAN) (SWE) \n    2     4 \n\n[[5]]\nnationalites\n(CAN) \n    3 \n\n[[6]]\nnationalites\n(GER) \n    3 \n\n[[7]]\nnationalites\n(CAN) (NOR) (SWE) (URS) \n    2     1     1     1 \n\n[[8]]\nnationalites\n(URS) \n    1 \n\n[[9]]\n< table of extent 0 >\n\n[[10]]\nnationalites\n(FIN) (SUI) \n    1     1 \n\n[[11]]\nnationalites\n(GBR) \n    1 \n\n[[12]]\nnationalites\n(CAN) (USA) \n    1     1 \n\n[[13]]\nnationalites\n(CRO) (NOR) \n    1     1 \n\n[[14]]\nnationalites\n(NOR) \n    2 \n\n[[15]]\nnationalites\n(USA) \n    1 \n\nlist_df_nationalites_hiver <- list()\n\nfor (i in seq_along(resultats_nationalites_hiver)) {\n  df_nationalites_hiver <- as.data.frame(resultats_nationalites_hiver[[i]])\n  \n  list_df_nationalites_hiver[[i]] <- df_nationalites_hiver\n}\n\ndf_nationalites_hiver <- do.call(rbind, list_df_nationalites_hiver)\ndf_nationalites_hiver\n\n   nationalites Freq\n1         (NOR)    1\n2         (GER)    2\n3         (AUT)    1\n4         (FIN)    1\n5         (GER)    1\n6         (NOR)    2\n7         (RDA)    1\n8         (CAN)    2\n9         (SWE)    4\n10        (CAN)    3\n11        (GER)    3\n12        (CAN)    2\n13        (NOR)    1\n14        (SWE)    1\n15        (URS)    1\n16        (URS)    1\n17        (FIN)    1\n18        (SUI)    1\n19        (GBR)    1\n20        (CAN)    1\n21        (USA)    1\n22        (CRO)    1\n23        (NOR)    1\n24        (NOR)    2\n25        (USA)    1\n\nlibrary(dplyr)\n\ndf_nationalites_hiver |>\n  group_by(nationalites) |>\n  summarise(Total = sum(Freq)) |>\n  arrange(desc(Total)) |>\n  head(3)\n\n# A tibble: 3 × 2\n  nationalites Total\n  <fct>        <int>\n1 (CAN)            8\n2 (NOR)            7\n3 (GER)            6\n\n\nEt grâce à cette fonction, on peut constater que les 3 nationalités les plus représentées, pour toutes les épreuves, au classement du nombre de médailles d’or individuelles reccueillies sont le Canada avec 8 médailles d’or, la Norvège avec 7 et l’Allemagne avec 6.\n\n\n\nImage libre de droit"
  },
  {
    "objectID": "posts/exercice 3/index.html",
    "href": "posts/exercice 3/index.html",
    "title": "Les athlètes olympiques",
    "section": "",
    "text": "Cet article vous offre l’opportunité d’approfondir vos connaissances sur les caractéristiques des athlètes olympiques, ainsi que sur les intervalles de temps qui séparent les JO de Rio, Tokyo et Paris."
  },
  {
    "objectID": "posts/exercice 3/index.html#description-des-données-utilisées",
    "href": "posts/exercice 3/index.html#description-des-données-utilisées",
    "title": "Les athlètes olympiques",
    "section": "Description des données utilisées",
    "text": "Description des données utilisées\nAvant tout, et pour des raisons de transparence nous commençons par vous présenter les données utilisées et la façon dont nous les avons modifié. Cela afin de vous garantir des informations fiables et de qualité.\n\n# Importation des librairies\nlibrary(jsonlite)\nlibrary(arrow)\nlibrary(RSQLite)\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(lubridate)\n\nListe des fichiers et extensions :\n\nfiles <- list.files(\"data/\")\nfiles\n\ncharacter(0)\n\ntools::file_ext(files)\n\nlogical(0)\n\n\nIl y a 6 fichiers présents dans le dossier data :\n__MACOSX et raw, data qui a pour extension sqlite olympics_athletes qui a pour extension json exo_1 qui a pour extension csv tokyo_athletes qui a pour extension parquet\nLecture du fichier parquet :\n\ntokyo_athl <- read_parquet(\"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/tokyo_athletes.parquet\")\ndim(tokyo_athl)\n\n[1] 11085     3\n\ncolnames(tokyo_athl)\n\n[1] \"Name\"       \"NOC\"        \"Discipline\"\n\n\nTokyo_athl contient 11085 lignes et 3 colonnes (Name, NOC et Discipline)\nLecture du fichier json :\n\nolymp_athl <- fromJSON(\"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/olympics_athletes.json\")\ndim(olymp_athl)\n\n[1] 269731     13\n\ncolnames(olymp_athl)\n\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n\n\nolymp_athl contient 269731 lignes et 13 colonnes : ID, Name, Sex, Age, Height, Weight, Team, NOC, Games, City, Sport, Event et Medal\nConnexion à sqlite :\n\ncon <- dbConnect(RSQLite::SQLite(), dbname = \"C:/Users/emmal/Documents/A- Master 1 ECAP/R avancé et Git/Exercices/data/data.sqlite\")\ndbListTables(con)\n\n[1] \"olympics_athletes\" \"tokyo_athletes\"    \"tokyo_medals\"     \n[4] \"tokyo_teams\"      \n\n\nLes tables présentes dans con sont olympics_athletes, tokyo_athletes, tokyo_medals et tokyo_teams\nCréation de 2 tables avec dbWriteTable :\n\ndbWriteTable(con, name = \"olympics_athletes\", value = olymp_athl, overwrite = TRUE)\ndbWriteTable(con, \"tokyo_athletes\", tokyo_athl, overwrite = TRUE)\n\nInspection de olympics_athletes :\n\ndbListFields(con, \"olympics_athletes\")\n\n [1] \"ID\"     \"Name\"   \"Sex\"    \"Age\"    \"Height\" \"Weight\" \"Team\"   \"NOC\"   \n [9] \"Games\"  \"City\"   \"Sport\"  \"Event\"  \"Medal\" \n\n\nLes colonnes présentes dans la table sont ID Name Sex Age Height Weight Team NOC Games City Sport Event et Medal\nImportation de la table olympics_athletes :\n\ntable_olympics <- dbReadTable(con, \"olympics_athletes\")\ntable_olympics <- as_tibble(table_olympics)\ntable_olympics\n\n# A tibble: 269,731 × 13\n      ID Name      Sex     Age Height Weight Team  NOC   Games City  Sport Event\n   <int> <chr>     <chr> <int>  <int>  <dbl> <chr> <chr> <chr> <chr> <chr> <chr>\n 1     1 A Dijiang M        24    180     80 China CHN   1992… Barc… Bask… Bask…\n 2     2 A Lamusi  M        23    170     60 China CHN   2012… Lond… Judo  Judo…\n 3     3 Gunnar N… M        24     NA     NA Denm… DEN   1920… Antw… Foot… Foot…\n 4     4 Edgar Li… M        34     NA     NA Denm… DEN   1900… Paris Tug-… Tug-…\n 5     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 6     5 Christin… F        21    185     82 Neth… NED   1988… Calg… Spee… Spee…\n 7     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 8     5 Christin… F        25    185     82 Neth… NED   1992… Albe… Spee… Spee…\n 9     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n10     5 Christin… F        27    185     82 Neth… NED   1994… Lill… Spee… Spee…\n# ℹ 269,721 more rows\n# ℹ 1 more variable: Medal <chr>\n\n\nConversion de la colonne Sex avec mutate :\n\nstr(table_olympics)\n\ntibble [269,731 × 13] (S3: tbl_df/tbl/data.frame)\n $ ID    : int [1:269731] 1 2 3 4 5 5 5 5 5 5 ...\n $ Name  : chr [1:269731] \"A Dijiang\" \"A Lamusi\" \"Gunnar Nielsen Aaby\" \"Edgar Lindenau Aabye\" ...\n $ Sex   : chr [1:269731] \"M\" \"M\" \"M\" \"M\" ...\n $ Age   : int [1:269731] 24 23 24 34 21 21 25 25 27 27 ...\n $ Height: int [1:269731] 180 170 NA NA 185 185 185 185 185 185 ...\n $ Weight: num [1:269731] 80 60 NA NA 82 82 82 82 82 82 ...\n $ Team  : chr [1:269731] \"China\" \"China\" \"Denmark\" \"Denmark/Sweden\" ...\n $ NOC   : chr [1:269731] \"CHN\" \"CHN\" \"DEN\" \"DEN\" ...\n $ Games : chr [1:269731] \"1992 Summer\" \"2012 Summer\" \"1920 Summer\" \"1900 Summer\" ...\n $ City  : chr [1:269731] \"Barcelona\" \"London\" \"Antwerpen\" \"Paris\" ...\n $ Sport : chr [1:269731] \"Basketball\" \"Judo\" \"Football\" \"Tug-Of-War\" ...\n $ Event : chr [1:269731] \"Basketball Men's Basketball\" \"Judo Men's Extra-Lightweight\" \"Football Men's Football\" \"Tug-Of-War Men's Tug-Of-War\" ...\n $ Medal : chr [1:269731] NA NA NA \"Gold\" ...\n\ntable(table_olympics$Sex)\n\n\n     F      M \n 74378 195353 \n\ntable_olympics <- table_olympics |>\n  mutate(Sex = factor(Sex, levels = c(\"F\",\"M\"), labels = c(\"1\",\"0\")))\nstr(table_olympics$Sex)\n\n Factor w/ 2 levels \"1\",\"0\": 2 2 2 2 1 1 1 1 1 1 ...\n\nhead(table_olympics$Sex)\n\n[1] 0 0 0 0 1 1\nLevels: 1 0\n\n\nCréation des colonnes Year et isSummer à partir de la colonne Games :\n\nView(table_olympics)\n\ntable_olympics <- table_olympics |>\n  separate_wider_delim(\n    cols = Games,\n    names = c(\"Year\", \"isSummer\"),\n    delim = \" \",\n  ) |>\n  mutate(isSummer = ifelse(isSummer == \"Summer\", TRUE, FALSE))\n\ntable_olympics$Year <- as.integer(table_olympics$Year)\nhead(table_olympics[, c(\"Year\", \"isSummer\")])\n\n# A tibble: 6 × 2\n   Year isSummer\n  <int> <lgl>   \n1  1992 TRUE    \n2  2012 TRUE    \n3  1920 TRUE    \n4  1900 TRUE    \n5  1988 FALSE   \n6  1988 FALSE"
  },
  {
    "objectID": "posts/exercice 3/index.html#la-moyenne-dâge-des-athlètes-de-chaque-édition-des-jo",
    "href": "posts/exercice 3/index.html#la-moyenne-dâge-des-athlètes-de-chaque-édition-des-jo",
    "title": "Les athlètes olympiques",
    "section": "La moyenne d’âge des athlètes de chaque édition des JO",
    "text": "La moyenne d’âge des athlètes de chaque édition des JO\nCalcul de la moyenne d’âge pour chaque édition des JO :\n\nsummary(table_olympics$Age)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n  10.00   21.00   24.00   25.45   28.00   97.00    9315 \n\nmoyenne <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  group_by(Year) |>\n  summarise(moyenne_age_edition = mean(Age, na.rm=TRUE))\n\nmoyenne\n\n# A tibble: 29 × 2\n    Year moyenne_age_edition\n   <int>               <dbl>\n 1  1896                23.6\n 2  1900                28.9\n 3  1904                26.7\n 4  1906                27.1\n 5  1908                27.0\n 6  1912                27.5\n 7  1920                29.3\n 8  1924                28.1\n 9  1928                28.0\n10  1932                30.2\n# ℹ 19 more rows\n\n\nEn moyenne, les athlètes olympiques ont 25 ans.\nL’année avec les athlètes les plus jeunes est 1896 avec une moyenne d’âge de 23,6 ans.\n\nmoyenne[which.min(moyenne$moyenne_age_edition), ]\n\n# A tibble: 1 × 2\n   Year moyenne_age_edition\n  <int>               <dbl>\n1  1896                23.6\n\n\nL’année avec les athlètes les plus vieux est 1932 avec une moyenne d’âge de 30,2 ans.\n\nmoyenne[which.max(moyenne$moyenne_age_edition), ]\n\n# A tibble: 1 × 2\n   Year moyenne_age_edition\n  <int>               <dbl>\n1  1932                30.2"
  },
  {
    "objectID": "posts/exercice 3/index.html#la-taille-des-athlètes-féminines",
    "href": "posts/exercice 3/index.html#la-taille-des-athlètes-féminines",
    "title": "Les athlètes olympiques",
    "section": "La taille des athlètes féminines",
    "text": "La taille des athlètes féminines\n\ntaille <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  filter(Sex == \"1\") |>\n  group_by(Sport) |>\n  summarise(moyenne_taille_sport = mean(Height, na.rm=TRUE))\n\ntaille[which.max(taille$moyenne_taille_sport), ] \n\n# A tibble: 1 × 2\n  Sport      moyenne_taille_sport\n  <chr>                     <dbl>\n1 Basketball                 182.\n\n\nla discipline des JO d’été pour laquelle la taille des athlètes féminines est la plus grande est le basketball avec une taille moyenne de 1m82.\nQuelle a été cette discipline au cours de chacune des éditions ?\n\ntaille2 <- table_olympics |>\n  filter(isSummer==TRUE) |>\n  filter(Sex == \"1\") |>\n  group_by(Year, Sport) |>\n  summarise(moyenne_taille_sport = mean(Height, na.rm=TRUE))\n\ntaille_annee <- taille2 |>\n  filter(!is.na(moyenne_taille_sport)) |>\n  group_by(Year) |>\n  slice_max(order_by = moyenne_taille_sport, n = 1, with_ties = FALSE) |>\n  ungroup()\n\nView(taille_annee)\n\nMais au fil du temps, bien que le basketball ait souvent eu les plus grandes athlètes olympiques, il n’est pas le seul. On retrouve également des athlètes de grande taille dans d’autres disciplines telles que l’athlétisme, l’escrime, l’équitation, la natation et le volleyball.\nNombre de fois où chaque discipline a été la discipline avec les plus grandes athlètes :\n\ntaille_annee |>\n  count(Sport, sort = TRUE)\n\n# A tibble: 6 × 2\n  Sport             n\n  <chr>         <int>\n1 Basketball       10\n2 Fencing           4\n3 Volleyball        4\n4 Athletics         2\n5 Swimming          2\n6 Equestrianism     1\n\n\n10 fois pour le basketball, 4 fois pour le fencing et volleyball, 2 fois pour l’Athletisme et la natation et une fois pour equestrianism"
  },
  {
    "objectID": "posts/exercice 3/index.html#combien-de-temps-sépare-les-éditions-des-jo-de-rio-tokyo-et-paris",
    "href": "posts/exercice 3/index.html#combien-de-temps-sépare-les-éditions-des-jo-de-rio-tokyo-et-paris",
    "title": "Les athlètes olympiques",
    "section": "Combien de temps sépare les éditions des JO de Rio, Tokyo et Paris ?",
    "text": "Combien de temps sépare les éditions des JO de Rio, Tokyo et Paris ?\n\ntexte <- \"Les jeux olympiques d’été se déroulent normalement tous les 4 ans, durant les mois\nde Juillet et Août. Les jeux de Rio ont eu lieu du 5 Août 2016 au 20 Août 2016,\nceux de Tokyo du 23 Juillet 2021 au 8 Août 2021, et ceux de Paris auront lieu du\n26 Juillet 2024 au 11 Août 2024. Plus de 10000 athlètes sont attendus du monde\nentier à Paris.\"\n\ndates <- str_extract_all(texte, \"\\\\d{1,2} (Juillet|Août) \\\\d{4}\")\ndates\n\n[[1]]\n[1] \"5 Août 2016\"     \"20 Août 2016\"    \"23 Juillet 2021\" \"8 Août 2021\"    \n[5] \"26 Juillet 2024\" \"11 Août 2024\"   \n\n\n\n# Remplacement des noms des mois par leur numéro :\ndates_format <- str_replace_all(dates[[1]], c(\"Juillet\"=\"07\", \"Août\"=\"08\"))\ndates_format\n\n[1] \"5 08 2016\"  \"20 08 2016\" \"23 07 2021\" \"8 08 2021\"  \"26 07 2024\"\n[6] \"11 08 2024\"\n\n\n\n# Conversion des éléments en date\ndates_transfo <- dmy(dates_format)\ndates_transfo\n\n[1] \"2016-08-05\" \"2016-08-20\" \"2021-07-23\" \"2021-08-08\" \"2024-07-26\"\n[6] \"2024-08-11\"\n\n\n\n# Calcul du temps séparant les éditions en jours et semaines\nrio_tokyo_jours <- as.numeric(difftime(dmy(\"23 Juillet 2021\"), dmy(\"20 Août 2016\"), units = \"days\"))\nprint(paste(\"Nombre de jours séparant les éditions de Rio et Tokyo :\", rio_tokyo_jours, \" jours.\"))\n\n[1] \"Nombre de jours séparant les éditions de Rio et Tokyo : 1798  jours.\"\n\ntokyo_paris_jours <- as.numeric(difftime(dmy(\"26 Juillet 2024\"), dmy(\"8 Août 2021\"), units = \"days\"))\nprint(paste(\"Nombre de jours séparant les éditions de Tokyo et Paris :\", tokyo_paris_jours, \" jours.\"))\n\n[1] \"Nombre de jours séparant les éditions de Tokyo et Paris : 1083  jours.\"\n\nrio_tokyo_semaines <- round(rio_tokyo_jours / 7,0)\nprint(paste(\"Nombre de semaines séparant les éditions de Rio et Tokyo :\", rio_tokyo_semaines, \" semaines.\"))\n\n[1] \"Nombre de semaines séparant les éditions de Rio et Tokyo : 257  semaines.\"\n\ntokyo_paris_semaines <- round(tokyo_paris_jours / 7,0)\nprint(paste(\"Nombre de semaines séparant les éditions de Tokyo et Paris :\", rio_tokyo_semaines, \" semaines.\"))\n\n[1] \"Nombre de semaines séparant les éditions de Tokyo et Paris : 257  semaines.\"\n\n\n\n\n\nImage libre de droit"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Prévisions météorologiques",
    "section": "",
    "text": "La librairie R olympicsWeather permet d’obtenir et de visualiser les données météorologiques associées à une adresse ou à des coordonnées gps.\nElle contient trois fonctions : get_forecast qui permet d’obtenir ces données sous forme de tibble, la fonction visualiser_forecast_d qui permet d’obtenir une visualisation de la météo par jour et une fonction visualiser_forecast_h qui offre la possibilité de visualiser la météo par heure.\nPar exemple :\n- get_forecast(“paris”) ou get_forecast(48.8534,2.3488) renvoient toutes les deux des données concernant la température, la température ressentie, la probabilité de précipitation et les précipitations sous forme de tableau. Ici ces données concerneront la ville de Paris.\n- visualiser_forecast_d(“paris”) ou visualiser_forecast_d(48.8534,2.3488) renverront ces mêmes informations mais par jour et sous forme de graphiques.\n- visualiser_forecast_h(“paris”) ou visualiser_forecast_h(48.8534,2.3488) renverront également des graphiques mais par heures.\nAfin de pouvoir utiliser ce package dans votre environnement Rstudio, vous devrez effectuer le code suivant :\n\n# Ces commandes permettent d'installer la librairie olympicsWeather directement depuis le dépôt GitHub contenant le package.\ninstall.packages(\"remotes\")\nlibrary(remotes)\n\nremotes::install_github(\"Emmalabre/olympicsWeather\")"
  },
  {
    "objectID": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-le-stade-de-france",
    "href": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-le-stade-de-france",
    "title": "Prévisions météorologiques",
    "section": "Prévisions météo à 7 jours pour le Stade de France",
    "text": "Prévisions météo à 7 jours pour le Stade de France\n\nlibrary(olympicsWeather)\nolympicsWeather::visualiser_forecast_d(\"stade de France\")\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds"
  },
  {
    "objectID": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-tahiti",
    "href": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-tahiti",
    "title": "Prévisions météorologiques",
    "section": "Prévisions météo à 7 jours pour Tahiti",
    "text": "Prévisions météo à 7 jours pour Tahiti\n\nvisualiser_forecast_d(\"Tahiti\")\n\nPassing 1 address to the Nominatim single address geocoder\n\n\nQuery completed in: 1 seconds"
  },
  {
    "objectID": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-les-coordonnées-gps-43.276703-5.334791",
    "href": "posts/post-with-code/index.html#prévisions-météo-à-7-jours-pour-les-coordonnées-gps-43.276703-5.334791",
    "title": "Prévisions météorologiques",
    "section": "Prévisions météo à 7 jours pour les coordonnées gps 43.276703, 5.334791",
    "text": "Prévisions météo à 7 jours pour les coordonnées gps 43.276703, 5.334791\n\nvisualiser_forecast_d(43.276703,5.334791)"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenue sur le blog des JO",
    "section": "",
    "text": "Alors que la France s’apprête à accueillir pour la sixième fois les Jeux Olympiques, après les deux éditions d’été de 1900 et 1924 et les trois éditions d’hiver de 1924,1968 et 1992, cette année revêt alors une importance particulière pour les amateurs de sport et les passionnés de culture.\nC’est donc l’occasion idéale de vous présenter les sites olympiques qui accueilleront les disciplines des JO de Paris 2024 mais également d’en apprendre davantage sur les athlètes, les médailles, les disciplines et les éditions olympiques passées.\nRejoignez-nous pour une exploration enrichissante des événements passés et à venir et préparez-vous au mieux pour profiter des jeux de Paris 2024 avec des informations météorologiques en temps réel.\n\n\n\nImage libre de droit"
  }
]